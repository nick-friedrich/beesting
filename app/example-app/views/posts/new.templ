package postviews

import (
	"net/http"

	components "github.com/nick-friedrich/beesting/app/example-app/views/components"
)

templ New(r *http.Request) {
	<div class="max-w-6xl mx-auto">
		<div class="mb-6">
			<a href="/posts" class="btn btn-ghost btn-sm mb-4">
				<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
				</svg>
				Back to Posts
			</a>
		</div>
		@components.Card("Create New Post") {
			<form method="post" class="space-y-6">
				@components.CSRF(r)
				<div class="form-control">
					<label class="label">
						<span class="label-text font-medium">Post Title</span>
					</label>
					<input
						name="title"
						id="title"
						type="text"
						class="input input-bordered w-full"
						placeholder="Enter a compelling title for your post"
						required
					/>
				</div>
				<div class="form-control">
					<label class="label">
						<span class="label-text font-medium">URL Slug</span>
					</label>
					<input
						name="slug"
						id="slug"
						type="text"
						class="input input-bordered w-full"
						placeholder="url-friendly-slug"
						required
					/>
					<label class="label">
						<span class="label-text-alt">This will be used in the URL. Only lowercase letters, numbers, and hyphens allowed.</span>
					</label>
				</div>
				<div class="form-control">
					<label class="label">
						<span class="label-text font-medium">Author</span>
					</label>
					<input
						name="author"
						type="text"
						class="input input-bordered w-full"
						placeholder="Enter the author's name"
						required
					/>
				</div>
				<div class="form-control">
					<label class="label">
						<span class="label-text font-medium">Content</span>
					</label>
					<textarea
						name="content"
						class="textarea textarea-bordered w-full h-64"
						placeholder="Write your post content here..."
						required
					></textarea>
				</div>
				<div class="form-control">
					<label class="cursor-pointer label">
						<span class="label-text font-medium">Publish immediately</span>
						<input
							name="published"
							type="checkbox"
							class="checkbox checkbox-primary"
							checked
						/>
					</label>
					<label class="label">
						<span class="label-text-alt">Uncheck to save as draft</span>
					</label>
				</div>
				<div class="form-control mt-8">
					<div class="flex gap-3">
						<button type="submit" class="btn btn-primary flex-1">
							<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
							</svg>
							Create Post
						</button>
						<a href="/posts" class="btn btn-outline">
							Cancel
						</a>
					</div>
				</div>
			</form>
		}
	</div>
	<script>
		function slugify(text) {
			return text
				.toLowerCase()
				.trim()
				.replace(/[^\w\s-]/g, '') // Remove special characters
				.replace(/[\s_-]+/g, '-') // Replace spaces and underscores with hyphens
				.replace(/^-+|-+$/g, ''); // Remove leading/trailing hyphens
		}
		
		function validateSlug(slug) {
			return /^[a-z0-9-]+$/.test(slug) && !slug.startsWith('-') && !slug.endsWith('-');
		}
		
		document.addEventListener('DOMContentLoaded', function() {
			const titleInput = document.getElementById('title');
			const slugInput = document.getElementById('slug');
			
			titleInput.addEventListener('input', function() {
				if (slugInput.value === '' || slugInput.dataset.autoGenerated === 'true') {
					const slug = slugify(this.value);
					slugInput.value = slug;
					slugInput.dataset.autoGenerated = 'true';
					updateSlugValidation();
				}
			});
			
			slugInput.addEventListener('input', function() {
				this.dataset.autoGenerated = 'false';
				updateSlugValidation();
			});
			
			function updateSlugValidation() {
				const slug = slugInput.value;
				const isValid = validateSlug(slug);
				
				if (slugInput.value !== '') {
					if (isValid) {
						slugInput.classList.remove('input-error');
						slugInput.classList.add('input-success');
					} else {
						slugInput.classList.remove('input-success');
						slugInput.classList.add('input-error');
					}
				} else {
					slugInput.classList.remove('input-error', 'input-success');
				}
			}
		});
	</script>
}
